/*
 * Copyright 2020 - present Maksym Ostroverkhov.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "application"
}

description = "Netty based implementation of rfc8441 - bootstrapping websockets with http/2. Performance test project"

def epollClassifier =
        osdetector.os == "linux"
                ? "::${osdetector.classifier}"
                : ""

dependencies {
    implementation project(":netty-websocket-http2")
    implementation "org.hdrhistogram:HdrHistogram"
    implementation "io.netty:netty-transport-classes-epoll"
    implementation "org.slf4j:slf4j-api"
    runtimeOnly "io.netty:netty-transport-native-epoll${epollClassifier}"
    runtimeOnly "io.netty:netty-tcnative-boringssl-static::${osdetector.classifier}"
    runtimeOnly "ch.qos.logback:logback-classic"
}

task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.jauntsdn.netty.handler.codec.http2.websocketx.perftest.server.Main"
}

task runClient(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.jauntsdn.netty.handler.codec.http2.websocketx.perftest.client.Main"
}
